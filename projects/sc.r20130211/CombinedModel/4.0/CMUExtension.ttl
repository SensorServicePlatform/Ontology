# baseURI: http://www.cmusv.edu/SmartCommunity/CombinedModel/4.0/CMUExtension
# imports: http://www.cmusv.edu/SmartCommunity/CombinedModel/4.0/CoreSCModel

# c14n-version: 3
@prefix cmusc: <http://www.cmusv.edu/SmartCommunity/CombinedModel/4.0/CMUExtension#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix sc: <http://www.cmusv.edu/SmartCommunity/CombinedModel/4.0/CoreSCModel#> .
@prefix sp: <http://spinrdf.org/sp#> .
@prefix spin: <http://spinrdf.org/spin#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
<http://www.cmusv.edu/SmartCommunity/CombinedModel/4.0/CMUExtension>
  rdf:type owl:Ontology ;
  owl:imports <http://www.cmusv.edu/SmartCommunity/CombinedModel/4.0/CoreSCModel> ;
  owl:versionInfo "Created with TopBraid Composer"^^xsd:string ;
.
cmusc:Device
  rdf:type owl:Class ;
  spin:rule [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object cmusc:FireflyDevice ;
            sp:predicate rdf:type ;
            sp:subject spin:_this ;
          ]
        ) ;
      sp:where (
          [
            rdf:type sp:TriplePath ;
            sp:object "SensorAndrew"^^xsd:string ;
            sp:path [
                rdf:type sp:SeqPath ;
                sp:path1 cmusc:hasAgent ;
                sp:path2 sc:hasLabel ;
              ] ;
            sp:subject spin:_this ;
          ]
        ) ;
    ] ;
  rdfs:subClassOf sc:Device ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:allValuesFrom cmusc:DeviceAgent ;
      owl:onProperty cmusc:hasAgent ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:allValuesFrom sc:Sensor ;
      owl:onProperty sc:hasSensor ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:cardinality "1"^^xsd:nonNegativeInteger ;
      owl:onProperty cmusc:uri ;
    ] ;
.
cmusc:DeviceAgent
  rdf:type owl:Class ;
  rdfs:subClassOf sc:Resource ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:allValuesFrom sc:Event ;
      owl:onProperty sc:createdAt ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:allValuesFrom xsd:string ;
      owl:onProperty cmusc:hasNetworkAddress ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:allValuesFrom xsd:string ;
      owl:onProperty cmusc:metadataJson ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:allValuesFrom xsd:string ;
      owl:onProperty cmusc:uri ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:allValuesFrom xsd:string ;
      owl:onProperty sc:updatedAt ;
    ] ;
.
cmusc:FireflyDevice
  rdf:type owl:Class ;
  rdfs:subClassOf cmusc:Device ;
  owl:equivalentClass [
      rdf:type owl:Class ;
      owl:intersectionOf (
          cmusc:Device
          [
            rdf:type owl:Restriction ;
            owl:onProperty cmusc:hasAgent ;
            owl:someValuesFrom [
                rdf:type owl:Class ;
                owl:intersectionOf (
                    cmusc:DeviceAgent
                    [
                      rdf:type owl:Restriction ;
                      owl:hasValue "SensorAndrew"^^xsd:string ;
                      owl:onProperty sc:hasLabel ;
                    ]
                  ) ;
              ] ;
          ]
        ) ;
    ] ;
.
cmusc:hasAgent
  rdf:type rdf:Property ;
.
cmusc:hasNetworkAddress
  rdf:type rdf:Property ;
.
cmusc:metadataJson
  rdf:type rdf:Property ;
.
sc:Sensor
  spin:rule [] ;
  spin:rule [] ;
  spin:rule [] ;
  spin:rule [] ;
  spin:rule [] ;
  spin:rule [] ;
  spin:rule [] ;
.
