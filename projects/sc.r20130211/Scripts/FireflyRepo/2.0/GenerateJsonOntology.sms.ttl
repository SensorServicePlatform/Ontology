# baseURI: http://www.cmusv.edu/SmartCommunity/Scripts/FireflyRepo/2.0/GenerateJsonOntology
# imports: http://topbraid.org/json
# imports: http://topbraid.org/sparqlmotionfunctions
# imports: http://topbraid.org/sparqlmotionlib-tbc

@prefix GenerateJsonOntology:  <http://www.cmusv.edu/SmartCommunity/Scripts/FireflyRepo/2.0/GenerateJsonOntology#> .
@prefix email:   <http://topbraid.org/email#> .
@prefix json:    <http://topbraid.org/json#> .
@prefix owl:     <http://www.w3.org/2002/07/owl#> .
@prefix rdf:     <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs:    <http://www.w3.org/2000/01/rdf-schema#> .
@prefix sm:      <http://topbraid.org/sparqlmotion#> .
@prefix sml:     <http://topbraid.org/sparqlmotionlib#> .
@prefix sp:      <http://spinrdf.org/sp#> .
@prefix spin:    <http://spinrdf.org/spin#> .
@prefix xsd:     <http://www.w3.org/2001/XMLSchema#> .

<http://www.cmusv.edu/SmartCommunity/Scripts/FireflyRepo/2.0/GenerateJsonOntology>
      rdf:type owl:Ontology ;
      owl:imports <http://topbraid.org/sparqlmotionfunctions> , <http://topbraid.org/sparqlmotionlib-tbc> , <http://topbraid.org/json> ;
      owl:versionInfo "Created with TopBraid Composer"^^xsd:string .

GenerateJsonOntology:ApplyConstructOntology
      rdf:type sml:ApplyConstruct ;
      sm:next GenerateJsonOntology:ExportOntology ;
      sml:constructQuery
              [ rdf:type sp:Construct ;
                sp:templates () ;
                sp:where ()
              ] ;
      sml:replace "true"^^xsd:boolean .

GenerateJsonOntology:ExportOntology
      rdf:type sml:ExportToRDFFile ;
      sm:next GenerateJsonOntology:ReturnSparqlResults ;
      sml:baseURI "/SmartCommunity/Scripts/Output/JsonOntology"^^xsd:string ;
      sml:targetFilePath "/SmartCommunity/Scripts/Output/JsonOntology.ttl"^^xsd:string .

GenerateJsonOntology:ImportDeviceJsonFromUrl
      rdf:type sml:ImportTextFromURL ;
      sm:next GenerateJsonOntology:ApplyConstructOntology ;
      sm:outputVariable "text"^^xsd:string ;
      sml:url "http://cmu-sds.herokuapp.com/get_devices"^^xsd:string .

GenerateJsonOntology:ReturnSparqlResults
      rdf:type sml:ReturnSPARQLResults , sm:Function ;
      rdfs:subClassOf sm:Functions ;
      sml:selectQuery
              [ rdf:type sp:Select ;
                sp:where ([ sp:object
                                    [ sp:varName "o"^^xsd:string
                                    ] ;
                            sp:predicate
                                    [ sp:varName "p"^^xsd:string
                                    ] ;
                            sp:subject
                                    [ sp:varName "s"^^xsd:string
                                    ]
                          ])
              ] ;
      sml:serialization sm:XML .
