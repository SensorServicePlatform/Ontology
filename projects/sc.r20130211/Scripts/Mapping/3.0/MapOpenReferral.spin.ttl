# baseURI: http://www.cmusv.edu/SmartCommunity/Mapping/3.0/MapOpenReferral
# imports: http://spinrdf.org/spin
# imports: http://topbraid.org/spin/spinmapl
# imports: http://www.cmusv.edu/SmartCommunity/CombinedModel/5.0/ORExtension
# imports: http://www.cmusv.edu/SmartCommunity/Scripts/Output/OpenReferralLocationRDF
# imports: http://www.cmusv.edu/SmartCommunity/Scripts/Output/OpenReferralOrgsRdfOutput

@prefix MapOpenReferral: <http://www.cmusv.edu/SmartCommunity/Mapping/3.0/MapOpenReferral#> .
@prefix arg: <http://spinrdf.org/arg#> .
@prefix or: <http://www.cmusv.edu/SmartCommunity/CombinedModel/5.0/ORExtension#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix sp: <http://spinrdf.org/sp#> .
@prefix spin: <http://spinrdf.org/spin#> .
@prefix spinmap: <http://spinrdf.org/spinmap#> .
@prefix spinmapl: <http://topbraid.org/spin/spinmapl#> .
@prefix spl: <http://spinrdf.org/spl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

<http://topbraid.org/json#Address>
  spinmap:rule [
      rdf:type spinmap:Mapping-0-1 ;
      spinmap:context MapOpenReferral:Address-PostalAddress ;
      spinmap:expression <http://schema.org/PostalAddress> ;
      spinmap:targetPredicate1 rdf:type ;
    ] ;
  spinmap:rule [
      rdf:type spinmap:Mapping-1-1 ;
      spinmap:context MapOpenReferral:Address-PostalAddress ;
      spinmap:expression spin:_arg1 ;
      spinmap:sourcePredicate1 <http://topbraid.org/json#state> ;
      spinmap:targetPredicate1 <http://schema.org/addressLocality> ;
    ] ;
  spinmap:rule [
      rdf:type spinmap:Mapping-1-1 ;
      spinmap:context MapOpenReferral:Address-PostalAddress ;
      spinmap:expression spin:_arg1 ;
      spinmap:sourcePredicate1 <http://topbraid.org/json#street> ;
      spinmap:targetPredicate1 <http://schema.org/streetAddress> ;
    ] ;
  spinmap:rule [
      rdf:type spinmap:Mapping-1-1 ;
      spinmap:context MapOpenReferral:Address-PostalAddress ;
      spinmap:expression spin:_arg1 ;
      spinmap:sourcePredicate1 <http://topbraid.org/json#zip> ;
      spinmap:targetPredicate1 <http://schema.org/postalCode> ;
    ] ;
.
<http://topbraid.org/json#Contact>
  spinmap:rule [
      rdf:type spinmap:Mapping-0-1 ;
      spinmap:context MapOpenReferral:Contact-Person ;
      spinmap:expression spin:_arg1 ;
      spinmap:targetPredicate1 <http://www.cmusv.edu/SmartCommunity/CombinedModel/5.0/CoreSCModel#hasGUID> ;
    ] ;
  spinmap:rule [
      rdf:type spinmap:Mapping-0-1 ;
      spinmap:context MapOpenReferral:Contact-Person ;
      spinmap:expression <http://www.cmusv.edu/SmartCommunity/CombinedModel/5.0/CoreSCModel#Person> ;
      spinmap:targetPredicate1 rdf:type ;
    ] ;
  spinmap:rule [
      rdf:type spinmap:Mapping-1-1 ;
      spinmap:context MapOpenReferral:Contact-Person ;
      spinmap:expression spin:_arg1 ;
      spinmap:sourcePredicate1 <http://topbraid.org/json#name> ;
      spinmap:targetPredicate1 <http://www.cmusv.edu/SmartCommunity/CombinedModel/5.0/CoreSCModel#hasLabel> ;
    ] ;
  spinmap:rule [
      rdf:type spinmap:Mapping-1-1 ;
      spinmap:context MapOpenReferral:Contact-Person ;
      spinmap:expression spin:_arg1 ;
      spinmap:sourcePredicate1 rdfs:label ;
      spinmap:targetPredicate1 rdfs:label ;
    ] ;
  spinmap:rule [
      rdf:type spinmap:Mapping-1-1 ;
      spinmap:context MapOpenReferral:Contact-Person ;
      spinmap:expression [
          rdf:type spinmap:targetResource ;
          sp:arg1 spin:_arg1 ;
          spinmap:context MapOpenReferral:Location-Location ;
        ] ;
      spinmap:sourcePredicate1 <http://topbraid.org/json#location_id> ;
      spinmap:targetPredicate1 <http://www.cmusv.edu/SmartCommunity/CombinedModel/5.0/CoreSCModel#locatedAt> ;
    ] ;
.
<http://topbraid.org/json#Location>
  spinmap:rule [
      rdf:type spinmap:Mapping-0-1 ;
      spinmap:context MapOpenReferral:Location-Location ;
      spinmap:expression <http://www.cmusv.edu/SmartCommunity/CombinedModel/5.0/CoreSCModel#Location> ;
      spinmap:targetPredicate1 rdf:type ;
    ] ;
  spinmap:rule [
      rdf:type spinmap:Mapping-1-1 ;
      spinmap:context MapOpenReferral:Location-Location ;
      spinmap:expression spin:_arg1 ;
      spinmap:sourcePredicate1 <http://topbraid.org/json#latitude> ;
      spinmap:targetPredicate1 <http://www.cmusv.edu/SmartCommunity/CombinedModel/5.0/CoreSCModel#latitude> ;
    ] ;
  spinmap:rule [
      rdf:type spinmap:Mapping-1-1 ;
      spinmap:context MapOpenReferral:Location-Location ;
      spinmap:expression spin:_arg1 ;
      spinmap:sourcePredicate1 <http://topbraid.org/json#longitude> ;
      spinmap:targetPredicate1 <http://www.cmusv.edu/SmartCommunity/CombinedModel/5.0/CoreSCModel#longitude> ;
    ] ;
  spinmap:rule [
      rdf:type spinmap:Mapping-1-1 ;
      spinmap:context MapOpenReferral:Location-Location ;
      spinmap:expression spin:_arg1 ;
      spinmap:sourcePredicate1 <http://topbraid.org/json#name> ;
      spinmap:targetPredicate1 <http://www.cmusv.edu/SmartCommunity/CombinedModel/5.0/CoreSCModel#printName> ;
    ] ;
  spinmap:rule [
      rdf:type spinmap:Mapping-1-1 ;
      spinmap:context MapOpenReferral:Location-Location ;
      spinmap:expression spin:_arg1 ;
      spinmap:sourcePredicate1 rdfs:label ;
      spinmap:targetPredicate1 rdfs:label ;
    ] ;
.
<http://topbraid.org/json#Mail_Address>
  spinmap:rule [
      rdf:type spinmap:Mapping-0-1 ;
      spinmap:context MapOpenReferral:Mail_Address-PostalAddress ;
      spinmap:expression <http://schema.org/PostalAddress> ;
      spinmap:targetPredicate1 rdf:type ;
    ] ;
  spinmap:rule [
      rdf:type spinmap:Mapping-1-1 ;
      spinmap:context MapOpenReferral:Mail_Address-PostalAddress ;
      spinmap:expression spin:_arg1 ;
      spinmap:sourcePredicate1 <http://topbraid.org/json#state> ;
      spinmap:targetPredicate1 <http://schema.org/addressLocality> ;
    ] ;
  spinmap:rule [
      rdf:type spinmap:Mapping-1-1 ;
      spinmap:context MapOpenReferral:Mail_Address-PostalAddress ;
      spinmap:expression spin:_arg1 ;
      spinmap:sourcePredicate1 <http://topbraid.org/json#street> ;
      spinmap:targetPredicate1 <http://schema.org/streetAddress> ;
    ] ;
  spinmap:rule [
      rdf:type spinmap:Mapping-1-1 ;
      spinmap:context MapOpenReferral:Mail_Address-PostalAddress ;
      spinmap:expression spin:_arg1 ;
      spinmap:sourcePredicate1 <http://topbraid.org/json#zip> ;
      spinmap:targetPredicate1 <http://schema.org/postalCode> ;
    ] ;
.
<http://topbraid.org/json#Organization>
  spinmap:rule [
      rdf:type spinmap:Mapping-0-1 ;
      spinmap:context MapOpenReferral:Organization-Organization ;
      spinmap:expression or:Organization ;
      spinmap:targetPredicate1 rdf:type ;
    ] ;
  spinmap:rule [
      rdf:type spinmap:Mapping-0-1 ;
      spinmap:context MapOpenReferral:Organization-Organization ;
      spinmap:expression [
          rdf:type spinmapl:concatWithSeparator ;
          sp:arg1 spin:_arg1 ;
          sp:arg2 "json:id"^^xsd:string ;
          spinmapl:separator "-"^^xsd:string ;
        ] ;
      spinmap:targetPredicate1 <http://www.cmusv.edu/SmartCommunity/CombinedModel/5.0/CoreSCModel#hasGUID> ;
    ] ;
  spinmap:rule [
      rdf:type spinmap:Mapping-1-1 ;
      spinmap:context MapOpenReferral:Organization-Organization ;
      spinmap:expression spin:_arg1 ;
      spinmap:sourcePredicate1 <http://topbraid.org/json#faxes> ;
      spinmap:targetPredicate1 <http://schema.org/faxNumber> ;
    ] ;
  spinmap:rule [
      rdf:type spinmap:Mapping-1-1 ;
      spinmap:context MapOpenReferral:Organization-Organization ;
      spinmap:expression spin:_arg1 ;
      spinmap:sourcePredicate1 <http://topbraid.org/json#mail_address> ;
      spinmap:targetPredicate1 <http://schema.org/address> ;
    ] ;
  spinmap:rule [
      rdf:type spinmap:Mapping-1-1 ;
      spinmap:context MapOpenReferral:Organization-Organization ;
      spinmap:expression spin:_arg1 ;
      spinmap:sourcePredicate1 <http://topbraid.org/json#organization> ;
      spinmap:targetPredicate1 <http://www.cmusv.edu/SmartCommunity/CombinedModel/5.0/CoreSCModel#isPartOf> ;
    ] ;
  spinmap:rule [
      rdf:type spinmap:Mapping-1-1 ;
      spinmap:context MapOpenReferral:Organization-Organization ;
      spinmap:expression spin:_arg1 ;
      spinmap:sourcePredicate1 <http://topbraid.org/json#phones> ;
      spinmap:targetPredicate1 <http://schema.org/telephone> ;
    ] ;
.
<http://topbraid.org/json#Service>
  spinmap:rule [
      rdf:type spinmap:Mapping-0-1 ;
      spinmap:context MapOpenReferral:Service-AssistanceService ;
      spinmap:expression or:AssistanceService ;
      spinmap:targetPredicate1 rdf:type ;
    ] ;
  spinmap:rule [
      rdf:type spinmap:Mapping-1-1 ;
      spinmap:context MapOpenReferral:Service-AssistanceService ;
      spinmap:expression spin:_arg1 ;
      spinmap:sourcePredicate1 <http://topbraid.org/json#funding_sources> ;
      spinmap:targetPredicate1 or:hasFundingSource ;
    ] ;
  spinmap:rule [
      rdf:type spinmap:Mapping-1-1 ;
      spinmap:context MapOpenReferral:Service-AssistanceService ;
      spinmap:expression spin:_arg1 ;
      spinmap:sourcePredicate1 <http://topbraid.org/json#name> ;
      spinmap:targetPredicate1 <http://www.cmusv.edu/SmartCommunity/CombinedModel/5.0/CoreSCModel#hasLabel> ;
    ] ;
  spinmap:rule [
      rdf:type spinmap:Mapping-1-1 ;
      spinmap:context MapOpenReferral:Service-AssistanceService ;
      spinmap:expression spin:_arg1 ;
      spinmap:sourcePredicate1 rdfs:label ;
      spinmap:targetPredicate1 rdfs:label ;
    ] ;
.
or:ORService-1
  or:hasKeyword "FIFA World Cup"^^xsd:string ;
  or:hasKeyword "Ruby on Rails/MongoDB/Redis"^^xsd:string ;
.
or:ORService-10
  or:hasKeyword "ADULT PROTECTION AND CARE SERVICES"^^xsd:string ;
  or:hasKeyword "Disabilities Issues"^^xsd:string ;
  or:hasKeyword "HEALTH SERVICES"^^xsd:string ;
  or:hasKeyword "Home Delivered Meals"^^xsd:string ;
  or:hasKeyword "Meal Sites/Home-delivered Mea"^^xsd:string ;
  or:hasKeyword "Nutrition"^^xsd:string ;
  or:hasKeyword "Older Adults"^^xsd:string ;
.
or:ORService-11
  or:hasKeyword "EDUCATION SERVICES"^^xsd:string ;
  or:hasKeyword "Libraries"^^xsd:string ;
  or:hasKeyword "Library"^^xsd:string ;
  or:hasKeyword "Public Libraries"^^xsd:string ;
.
or:ORService-12
  or:hasKeyword "EDUCATION SERVICES"^^xsd:string ;
  or:hasKeyword "Libraries"^^xsd:string ;
  or:hasKeyword "Library"^^xsd:string ;
  or:hasKeyword "Public Libraries"^^xsd:string ;
.
or:ORService-13
  or:hasKeyword "EDUCATION SERVICES"^^xsd:string ;
  or:hasKeyword "Libraries"^^xsd:string ;
  or:hasKeyword "Library"^^xsd:string ;
  or:hasKeyword "Public Libraries"^^xsd:string ;
.
or:ORService-14
  or:hasKeyword "Adult"^^xsd:string ;
  or:hasKeyword "Alternative"^^xsd:string ;
  or:hasKeyword "EDUCATION SERVICES"^^xsd:string ;
  or:hasKeyword "Libraries"^^xsd:string ;
  or:hasKeyword "Literacy Programs"^^xsd:string ;
  or:hasKeyword "Literacy"^^xsd:string ;
  or:hasKeyword "Public Libraries"^^xsd:string ;
  or:hasKeyword "Youth"^^xsd:string ;
.
or:ORService-15
  or:hasKeyword "EDUCATION SERVICES"^^xsd:string ;
  or:hasKeyword "Libraries"^^xsd:string ;
  or:hasKeyword "Library"^^xsd:string ;
  or:hasKeyword "Public Libraries"^^xsd:string ;
.
or:ORService-16
  or:hasKeyword "COMMUNITY SERVICES"^^xsd:string ;
  or:hasKeyword "EMERGENCY SERVICES"^^xsd:string ;
  or:hasKeyword "FINANCIAL ASSISTANCE SERVICES"^^xsd:string ;
  or:hasKeyword "Food Pantries"^^xsd:string ;
  or:hasKeyword "Homeless Shelter"^^xsd:string ;
  or:hasKeyword "Individual/Group Counseling"^^xsd:string ;
  or:hasKeyword "Interpretation/Translation"^^xsd:string ;
  or:hasKeyword "MENTAL HEALTH SERVICES"^^xsd:string ;
  or:hasKeyword "Rental Deposit Assistance"^^xsd:string ;
  or:hasKeyword "Shelter/Refuge"^^xsd:string ;
  or:hasKeyword "Utilities"^^xsd:string ;
  or:hasKeyword "Utility Service Payment Assistance"^^xsd:string ;
.
or:ORService-17
  or:hasKeyword "ALCOHOLISM SERVICES"^^xsd:string ;
  or:hasKeyword "DRUG ABUSE SERVICES"^^xsd:string ;
  or:hasKeyword "Residential Care"^^xsd:string ;
.
or:ORService-18
  or:hasKeyword "CHILD PROTECTION AND CARE SERVICES"^^xsd:string ;
  or:hasKeyword "COMMODITY SERVICES"^^xsd:string ;
  or:hasKeyword "COMMUNITY SERVICES"^^xsd:string ;
  or:hasKeyword "Camping"^^xsd:string ;
  or:hasKeyword "Clothing"^^xsd:string ;
  or:hasKeyword "Clothing/Personal Items"^^xsd:string ;
  or:hasKeyword "Day Care"^^xsd:string ;
  or:hasKeyword "EMERGENCY SERVICES"^^xsd:string ;
  or:hasKeyword "Emergency Food"^^xsd:string ;
  or:hasKeyword "FINANCIAL ASSISTANCE SERVICES"^^xsd:string ;
  or:hasKeyword "Food Boxes/Food Vouchers"^^xsd:string ;
  or:hasKeyword "Information and Referral"^^xsd:string ;
  or:hasKeyword "RECREATION/LEISURE SERVICES"^^xsd:string ;
  or:hasKeyword "Utilities"^^xsd:string ;
  or:hasKeyword "Utility Assistance"^^xsd:string ;
  or:hasKeyword "Youth Development"^^xsd:string ;
.
or:ORService-19
  or:hasKeyword "COMMODITY SERVICES"^^xsd:string ;
  or:hasKeyword "COMMUNITY SERVICES"^^xsd:string ;
  or:hasKeyword "Case/Care Management"^^xsd:string ;
  or:hasKeyword "Clothing"^^xsd:string ;
  or:hasKeyword "Clothing/Personal Items"^^xsd:string ;
  or:hasKeyword "EMERGENCY SERVICES"^^xsd:string ;
  or:hasKeyword "Emergency Food"^^xsd:string ;
  or:hasKeyword "FINANCIAL ASSISTANCE SERVICES"^^xsd:string ;
  or:hasKeyword "Food Boxes/Food Vouchers"^^xsd:string ;
  or:hasKeyword "Food Pantries"^^xsd:string ;
  or:hasKeyword "Furniture"^^xsd:string ;
  or:hasKeyword "Holiday Programs"^^xsd:string ;
  or:hasKeyword "Information and Referral"^^xsd:string ;
  or:hasKeyword "Low Income"^^xsd:string ;
  or:hasKeyword "Pastoral Counseling"^^xsd:string ;
  or:hasKeyword "School Supplies"^^xsd:string ;
  or:hasKeyword "Utilities"^^xsd:string ;
  or:hasKeyword "Utility Assistance"^^xsd:string ;
.
or:ORService-2
  or:hasKeyword "FIFA World Cup"^^xsd:string ;
  or:hasKeyword "Ruby on Rails/MongoDB/Redis"^^xsd:string ;
.
or:ORService-20
  or:hasKeyword "Community Clinics"^^xsd:string ;
  or:hasKeyword "HEALTH SERVICES"^^xsd:string ;
  or:hasKeyword "Outpatient Care"^^xsd:string ;
.
or:ORService-21
  or:hasKeyword "Community Clinics"^^xsd:string ;
  or:hasKeyword "HEALTH SERVICES"^^xsd:string ;
  or:hasKeyword "Outpatient Care"^^xsd:string ;
.
or:ORService-3
  or:hasKeyword "ADULT PROTECTION AND CARE SERVICES"^^xsd:string ;
  or:hasKeyword "Arts and Crafts"^^xsd:string ;
  or:hasKeyword "Brown Bag Food Programs"^^xsd:string ;
  or:hasKeyword "COMMUNITY SERVICES"^^xsd:string ;
  or:hasKeyword "Congregate Meals/Nutrition Sites"^^xsd:string ;
  or:hasKeyword "EDUCATION SERVICES"^^xsd:string ;
  or:hasKeyword "English Language"^^xsd:string ;
  or:hasKeyword "Group Support"^^xsd:string ;
  or:hasKeyword "Information and Referral"^^xsd:string ;
  or:hasKeyword "Meal Sites/Home-delivered Mea"^^xsd:string ;
  or:hasKeyword "Older Adults"^^xsd:string ;
  or:hasKeyword "RECREATION/LEISURE SERVICES"^^xsd:string ;
  or:hasKeyword "Senior Centers"^^xsd:string ;
  or:hasKeyword "Sports/Games/Exercise"^^xsd:string ;
.
or:ORService-4
  or:hasKeyword "EMPLOYMENT/TRAINING SERVICES"^^xsd:string ;
  or:hasKeyword "Job Development"^^xsd:string ;
  or:hasKeyword "Job Information/Placement/Referral"^^xsd:string ;
  or:hasKeyword "Job Search/Placement"^^xsd:string ;
  or:hasKeyword "Job Training Formats"^^xsd:string ;
  or:hasKeyword "Job Training"^^xsd:string ;
  or:hasKeyword "Older Adults"^^xsd:string ;
.
or:ORService-5
  or:hasKeyword "Gay, Lesbian, Bisexual, Transgender Individuals"^^xsd:string ;
  or:hasKeyword "Geriatric Counseling"^^xsd:string ;
  or:hasKeyword "Older Adults"^^xsd:string ;
.
or:ORService-6
  or:hasKeyword "Divorce Counseling"^^xsd:string ;
  or:hasKeyword "Growth and Adjustment"^^xsd:string ;
  or:hasKeyword "INDIVIDUAL AND FAMILY DEVELOPMENT SERVICES"^^xsd:string ;
  or:hasKeyword "LEGAL AND CRIMINAL JUSTICE SERVICES"^^xsd:string ;
  or:hasKeyword "Mediation"^^xsd:string ;
  or:hasKeyword "Parental Visitation Monitoring"^^xsd:string ;
  or:hasKeyword "Youth"^^xsd:string ;
.
or:ORService-7
  or:hasKeyword "Automobile Loans"^^xsd:string ;
  or:hasKeyword "COMMUNITY SERVICES"^^xsd:string ;
  or:hasKeyword "Speakers"^^xsd:string ;
.
or:ORService-8
  or:hasKeyword "ADULT PROTECTION AND CARE SERVICES"^^xsd:string ;
  or:hasKeyword "Adult"^^xsd:string ;
  or:hasKeyword "COMMUNITY SERVICES"^^xsd:string ;
  or:hasKeyword "Community Adult Schools"^^xsd:string ;
  or:hasKeyword "EDUCATION SERVICES"^^xsd:string ;
  or:hasKeyword "Education/Information"^^xsd:string ;
  or:hasKeyword "Family Support"^^xsd:string ;
  or:hasKeyword "Group Support"^^xsd:string ;
  or:hasKeyword "HEALTH SERVICES"^^xsd:string ;
  or:hasKeyword "In-Home Supportive"^^xsd:string ;
  or:hasKeyword "Individual/Group Counseling"^^xsd:string ;
  or:hasKeyword "Information and Referral"^^xsd:string ;
  or:hasKeyword "Meal Sites/Home-delivered Meals"^^xsd:string ;
  or:hasKeyword "Older Adults"^^xsd:string ;
  or:hasKeyword "RECREATION/LEISURE SERVICES"^^xsd:string ;
  or:hasKeyword "Screening/Immunization"^^xsd:string ;
  or:hasKeyword "Senior Centers"^^xsd:string ;
  or:hasKeyword "Sports/Games/Exercise"^^xsd:string ;
.
or:ORService-9
  or:hasKeyword "ADULT PROTECTION AND CARE SERVICES"^^xsd:string ;
  or:hasKeyword "Adult Day Health Care"^^xsd:string ;
  or:hasKeyword "Adult Day Programs"^^xsd:string ;
  or:hasKeyword "Dementia Management"^^xsd:string ;
  or:hasKeyword "Older Adults"^^xsd:string ;
.
<http://www.cmusv.edu/SmartCommunity/Mapping/3.0/MapOpenReferral>
  rdf:type owl:Ontology ;
  owl:imports <http://spinrdf.org/spin> ;
  owl:imports <http://topbraid.org/spin/spinmapl> ;
  owl:imports <http://www.cmusv.edu/SmartCommunity/CombinedModel/5.0/ORExtension> ;
  owl:imports <http://www.cmusv.edu/SmartCommunity/Scripts/Output/OpenReferralLocationRDF> ;
  owl:imports <http://www.cmusv.edu/SmartCommunity/Scripts/Output/OpenReferralOrgsRdfOutput> ;
  owl:versionInfo "Created with TopBraid Composer"^^xsd:string ;
.
MapOpenReferral:Address-PostalAddress
  rdf:type spinmap:Context ;
  spinmap:sourceClass <http://topbraid.org/json#Address> ;
  spinmap:target [
      rdf:type spinmapl:buildURI1 ;
      sp:arg1 <http://topbraid.org/json#location_id> ;
      spinmap:source spinmap:_source ;
      spinmapl:template "schema:Address-PostalAddress{?1}"^^xsd:string ;
    ] ;
  spinmap:targetClass <http://schema.org/PostalAddress> ;
.
MapOpenReferral:Contact-Person
  rdf:type spinmap:Context ;
  spinmap:sourceClass <http://topbraid.org/json#Contact> ;
  spinmap:target [
      rdf:type spinmapl:buildURI1 ;
      sp:arg1 <http://topbraid.org/json#id> ;
      spinmap:source spinmap:_source ;
      spinmapl:template "sc:Person-{?1}"^^xsd:string ;
    ] ;
  spinmap:targetClass <http://www.cmusv.edu/SmartCommunity/CombinedModel/5.0/CoreSCModel#Person> ;
.
MapOpenReferral:Location-Location
  rdf:type spinmap:Context ;
  spinmap:sourceClass <http://topbraid.org/json#Location> ;
  spinmap:target [
      rdf:type spinmapl:buildURI1 ;
      sp:arg1 <http://topbraid.org/json#id> ;
      spinmap:source spinmap:_source ;
      spinmapl:template "sc:Location-{?1}"^^xsd:string ;
    ] ;
  spinmap:targetClass <http://www.cmusv.edu/SmartCommunity/CombinedModel/5.0/CoreSCModel#Location> ;
.
MapOpenReferral:Mail_Address-PostalAddress
  rdf:type spinmap:Context ;
  spinmap:sourceClass <http://topbraid.org/json#Mail_Address> ;
  spinmap:target [
      rdf:type spinmapl:buildURI1 ;
      sp:arg1 <http://topbraid.org/json#id> ;
      spinmap:source spinmap:_source ;
      spinmapl:template "schema:Mail-PostalAddress-{?1}"^^xsd:string ;
    ] ;
  spinmap:targetClass <http://schema.org/PostalAddress> ;
.
MapOpenReferral:Map-1List-1
  rdf:type spin:ConstructTemplate ;
  spin:body [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object [
                sp:varName "newValue"^^xsd:string ;
              ] ;
            sp:predicate [
                sp:varName "targetPredicate1"^^xsd:string ;
              ] ;
            sp:subject [
                sp:varName "target"^^xsd:string ;
              ] ;
          ]
        ) ;
      sp:where (
          [
            sp:object [
                sp:varName "oldValue"^^xsd:string ;
              ] ;
            sp:predicate [
                sp:varName "sourcePredicate1"^^xsd:string ;
              ] ;
            sp:subject spin:_this ;
          ]
          [
            rdf:type sp:TriplePath ;
            sp:object [
                sp:varName "item"^^xsd:string ;
              ] ;
            sp:path [
                rdf:type sp:SeqPath ;
                sp:path1 [
                    rdf:type sp:ModPath ;
                    sp:modMax -2 ;
                    sp:modMin 0 ;
                    sp:subPath rdf:rest ;
                  ] ;
                sp:path2 rdf:first ;
              ] ;
            sp:subject [
                sp:varName "oldValue"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type spin:eval ;
                sp:arg1 [
                    sp:varName "expression"^^xsd:string ;
                  ] ;
                sp:arg2 sp:arg1 ;
                sp:arg3 [
                    sp:varName "item"^^xsd:string ;
                  ] ;
              ] ;
            sp:variable [
                sp:varName "newValue"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type spinmap:targetResource ;
                sp:arg1 spin:_this ;
                spinmap:context [
                    sp:varName "context"^^xsd:string ;
                  ] ;
              ] ;
            sp:variable [
                sp:varName "target"^^xsd:string ;
              ] ;
          ]
        ) ;
    ] ;
  spin:constraint [
      rdf:type spl:Argument ;
      spl:optional "true"^^xsd:boolean ;
      spl:predicate spinmap:inverseExpression ;
      rdfs:comment "An expression that executes the spinmap:expression in reverse direction. Can be used to support bi-directional mapping."^^xsd:string ;
    ] ;
  spin:constraint [
      rdf:type spl:Argument ;
      spl:predicate spinmap:expression ;
      rdfs:comment "The transformation function to use. Must take one argument, sp:arg1."^^xsd:string ;
    ] ;
  spin:constraint [
      rdf:type spl:Argument ;
      spl:predicate spinmap:sourcePredicate1 ;
      spl:valueType rdf:Property ;
      rdfs:comment "The property to map from (in the source object)."^^xsd:string ;
    ] ;
  spin:labelTemplate "Map into {?context}: derive {?targetPredicate1} from {?sourcePredicate1} using {?expression}"^^xsd:string ;
  rdfs:comment "A mapping that takes one source property and maps it into one target property."^^xsd:string ;
  rdfs:label "Property mapping"^^xsd:string ;
  rdfs:subClassOf spin:Templates ;
.
MapOpenReferral:MapListElements
  rdf:type spin:Template ;
  spin:body [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object [
                sp:varName "item"^^xsd:string ;
              ] ;
            sp:predicate [
                sp:varName "targetProperty"^^xsd:string ;
              ] ;
            sp:subject [
                sp:varName "uri"^^xsd:string ;
              ] ;
          ]
        ) ;
      sp:where (
          [
            sp:object [
                sp:varName "list"^^xsd:string ;
              ] ;
            sp:predicate [
                sp:varName "property"^^xsd:string ;
              ] ;
            sp:subject spin:_this ;
          ]
          [
            rdf:type sp:TriplePath ;
            sp:object [
                sp:varName "item"^^xsd:string ;
              ] ;
            sp:path [
                rdf:type sp:SeqPath ;
                sp:path1 [
                    rdf:type sp:ModPath ;
                    sp:modMax -2 ;
                    sp:modMin 0 ;
                    sp:subPath rdf:rest ;
                  ] ;
                sp:path2 rdf:first ;
              ] ;
            sp:subject [
                sp:varName "list"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type spinmap:targetResource ;
                sp:arg1 spin:_this ;
                spinmap:context [
                    sp:varName "context"^^xsd:string ;
                  ] ;
              ] ;
            sp:variable [
                sp:varName "uri"^^xsd:string ;
              ] ;
          ]
        ) ;
    ] ;
  spin:constraint [
      rdf:type spl:Argument ;
      spl:predicate arg:context ;
      spl:valueType spinmap:Context ;
      rdfs:comment "The context for the property mappings"^^xsd:string ;
    ] ;
  spin:constraint [
      rdf:type spl:Argument ;
      spl:predicate arg:property ;
      spl:valueType rdf:Property ;
      rdfs:comment "The property containing the RDF list"^^xsd:string ;
    ] ;
  spin:constraint [
      rdf:type spl:Argument ;
      spl:predicate arg:targetProperty ;
      spl:valueType rdf:Property ;
      rdfs:comment "The target property that will contain the multiple instances"^^xsd:string ;
    ] ;
  spin:labelTemplate "Get list members from {?property} and map to {?targetProperty} for {?context} mapping."^^xsd:string ;
  rdfs:label "Map elements of a list to multiple instances of a target property"^^xsd:string ;
  rdfs:subClassOf spin:Templates ;
.
MapOpenReferral:Organization-Organization
  rdf:type spinmap:Context ;
  spinmap:sourceClass <http://topbraid.org/json#Organization> ;
  spinmap:target [
      rdf:type spinmapl:buildURI1 ;
      sp:arg1 <http://purl.org/dc/elements/1.1/identifier> ;
      spinmap:source spinmap:_source ;
      spinmapl:template "or:{?1}"^^xsd:string ;
    ] ;
  spinmap:targetClass or:Organization ;
.
MapOpenReferral:Service-AssistanceService
  rdf:type spinmap:Context ;
  spinmap:sourceClass <http://topbraid.org/json#Service> ;
  spinmap:target [
      rdf:type spinmapl:buildURI1 ;
      sp:arg1 <http://topbraid.org/json#id> ;
      spinmap:source spinmap:_source ;
      spinmapl:template "or:ORService-{?1}"^^xsd:string ;
    ] ;
  spinmap:targetClass or:AssistanceService ;
.
MapOpenReferral:targetResourceList
  rdf:type spin:Function ;
  spin:body [
      rdf:type sp:Select ;
      sp:resultVariables (
          [
            sp:expression [
                rdf:type spin:eval ;
                sp:arg1 [
                    sp:varName "targetExpr"^^xsd:string ;
                  ] ;
                sp:arg2 spinmap:source ;
                sp:arg3 [
                    sp:varName "item"^^xsd:string ;
                  ] ;
              ] ;
            sp:varName "result"^^xsd:string ;
          ]
        ) ;
      sp:where (
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type spl:object ;
                sp:arg1 [
                    sp:varName "context"^^xsd:string ;
                  ] ;
                sp:arg2 spinmap:target ;
              ] ;
            sp:variable [
                sp:varName "targetExpr"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:TriplePath ;
            sp:object [
                sp:varName "item"^^xsd:string ;
              ] ;
            sp:path [
                rdf:type sp:SeqPath ;
                sp:path1 [
                    rdf:type sp:ModPath ;
                    sp:modMax -2 ;
                    sp:modMin 0 ;
                    sp:subPath rdf:rest ;
                  ] ;
                sp:path2 rdf:first ;
              ] ;
            sp:subject spin:_arg1 ;
          ]
        ) ;
    ] ;
  spin:constraint [
      rdf:type spl:Argument ;
      spl:predicate sp:arg1 ;
      spl:valueType rdfs:Resource ;
      rdfs:comment "The source resource that will be passed into the function."^^xsd:string ;
    ] ;
  spin:constraint [
      rdf:type spl:Argument ;
      spl:predicate spinmap:context ;
      spl:valueType spinmap:Context ;
      rdfs:comment "The Context that will deliver an instance of a function that delivers the target resource from a source resource (?sourceResource)."^^xsd:string ;
    ] ;
  spin:returnType rdfs:Resource ;
  spinmap:suggestion-0-1 [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object spinmap:targetResource ;
            sp:predicate rdf:type ;
            sp:subject _:b48835 ;
          ]
          [
            sp:object [
                sp:varName "context"^^xsd:string ;
              ] ;
            sp:predicate spinmap:context ;
            sp:subject _:b48835 ;
          ]
        ) ;
      sp:where (
          [
            sp:object [
                sp:varName "range"^^xsd:string ;
              ] ;
            sp:predicate rdfs:range ;
            sp:subject [
                sp:varName "targetPredicate1"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "sourceClass"^^xsd:string ;
              ] ;
            sp:predicate spinmap:sourceClass ;
            sp:subject [
                sp:varName "context"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "range"^^xsd:string ;
              ] ;
            sp:predicate spinmap:targetClass ;
            sp:subject [
                sp:varName "context"^^xsd:string ;
              ] ;
          ]
          [
            sp:object spinmap:Context ;
            sp:predicate rdf:type ;
            sp:subject [
                sp:varName "context"^^xsd:string ;
              ] ;
          ]
        ) ;
    ] ;
  spinmap:suggestion-1-1 [
      rdf:type sp:Construct ;
      sp:templates (
          [
            sp:object spinmap:targetResource ;
            sp:predicate rdf:type ;
            sp:subject _:b7019 ;
          ]
          [
            sp:object [
                sp:varName "context"^^xsd:string ;
              ] ;
            sp:predicate spinmap:context ;
            sp:subject _:b7019 ;
          ]
        ) ;
      sp:where (
          [
            sp:object [
                sp:varName "sourceRange"^^xsd:string ;
              ] ;
            sp:predicate rdfs:range ;
            sp:subject [
                sp:varName "sourcePredicate1"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "targetRange"^^xsd:string ;
              ] ;
            sp:predicate rdfs:range ;
            sp:subject [
                sp:varName "targetPredicate1"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "sourceRange"^^xsd:string ;
              ] ;
            sp:predicate spinmap:sourceClass ;
            sp:subject [
                sp:varName "context"^^xsd:string ;
              ] ;
          ]
          [
            sp:object [
                sp:varName "targetRange"^^xsd:string ;
              ] ;
            sp:predicate spinmap:targetClass ;
            sp:subject [
                sp:varName "context"^^xsd:string ;
              ] ;
          ]
          [
            sp:object spinmap:Context ;
            sp:predicate rdf:type ;
            sp:subject [
                sp:varName "context"^^xsd:string ;
              ] ;
          ]
        ) ;
    ] ;
  rdfs:comment "Gets the resource that is target of a mapping, based on a provided mapping context (?context) and a source resource (?arg1)."^^xsd:string ;
  rdfs:label "target resource"^^xsd:string ;
  rdfs:subClassOf spin:Functions ;
.
