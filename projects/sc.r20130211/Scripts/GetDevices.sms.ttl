# baseURI: http://www.cmusv.edu/SmartCommunity/Scripts/Devices
# imports: http://topbraid.org/sparqlmotionfunctions
# imports: http://topbraid.org/sparqlmotionlib-tbc

@prefix devices:  <http://www.cmusv.edu/SmartCommunity/Scripts/Devices#> .
@prefix owl:     <http://www.w3.org/2002/07/owl#> .
@prefix rdf:     <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs:    <http://www.w3.org/2000/01/rdf-schema#> .
@prefix sm:      <http://topbraid.org/sparqlmotion#> .
@prefix sml:     <http://topbraid.org/sparqlmotionlib#> .
@prefix sp:      <http://spinrdf.org/sp#> .
@prefix spin:    <http://spinrdf.org/spin#> .
@prefix xsd:     <http://www.w3.org/2001/XMLSchema#> .

<http://www.cmusv.edu/SmartCommunity/Scripts/Devices>
      rdf:type owl:Ontology ;
      owl:imports <http://topbraid.org/sparqlmotionfunctions> , <http://topbraid.org/sparqlmotionlib-tbc> ;
      owl:versionInfo "Created with TopBraid Composer"^^xsd:string .

devices:ConstructDeviceInstances
      rdf:type sml:ApplyConstruct ;
      sml:constructQuery
              [ rdf:type sp:Construct ;
                sp:templates () ;
                sp:where ()
              ] ;
      sml:replace "true"^^xsd:boolean .

devices:ConvertDeviceJsonToRdf
      rdf:type sml:ConvertJSONToRDF ;
      sm:next devices:ExportRdfToDeviceRdfFile ;
      sm:outputVariable "deviceRdf"^^xsd:string .

devices:ExportRdfToDeviceRdfFile
      rdf:type sml:ExportToRDFFile ;
      sm:next devices:IterateOverDevices ;
      sml:baseURI "http://www.cmusv.edu/SmartCommunity/Scripts/Output/Devices"^^xsd:string ;
      sml:targetFilePath "Output/Devices.rdf"^^xsd:string .

devices:ImportCombinedModel
      rdf:type sml:ImportRDFFromWorkspace ;
      sm:next devices:ReturnSparqlResultsForDevices ;
      sml:baseURI "http://www.cmusv.edu/SmartCommunity/CombinedModel/1.1"^^xsd:string ;
      sml:ignoreImports "false"^^xsd:boolean ;
      sml:sourceFilePath "/SmartCommunity/CombinedModel/1.1/CombinedModel.ttl"^^xsd:string .

devices:ImportDeviceJsonFromSensorRepo
      rdf:type sml:ImportTextFromURL ;
      sm:next devices:ConvertDeviceJsonToRdf ;
      sm:outputVariable "text"^^xsd:string ;
      sml:url "http://cmu-sds.herokuapp.com/get_devices"^^xsd:string .

devices:IterateOverDevices
      rdf:type sml:IterateOverSelect ;
      sm:body devices:ConstructDeviceInstances ;
      sm:next devices:ReturnSparqlResultsForDevices ;
      sml:iterationVariable
              "device"^^xsd:string ;
      sml:selectQuery
              [ rdf:type sp:Select ;
                sp:resultVariables ([ sp:varName "children"^^xsd:string
                          ]) ;
                sp:where ([ rdf:type sp:TriplePath ;
                            sp:object
                                    [ sp:varName "deviceRdf"^^xsd:string
                                    ] ;
                            sp:path [ rdf:type sp:ModPath ;
                                      sp:modMax -2 ;
                                      sp:modMin 1 ;
                                      sp:subPath rdfs:subClassOf
                                    ] ;
                            sp:subject
                                    [ sp:varName "children"^^xsd:string
                                    ]
                          ])
              ] .

devices:ReturnSparqlResultsForDevices
      rdf:type sm:Function , sml:ReturnSPARQLResults ;
      rdfs:subClassOf sm:Functions ;
      sml:serialization sm:XML .
